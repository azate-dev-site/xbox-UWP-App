name: Build Xbox UWP App Package

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 20

    steps:
      # Étape 1 - Checkout du code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Étape 2 - Configuration MSBuild
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1
        with:
          vs-version: '17.0'

      # Étape 3 - Préparation des répertoires et configuration
      - name: Prepare build environment
        shell: pwsh
        run: |
          # Créer le répertoire AppPackages
          New-Item -ItemType Directory -Path "./AppPackages" -Force
          
          # Modifier le fichier csproj pour désactiver NuGet et définir la version
          $projContent = Get-Content -Path Xbox-UWP-App.csproj -Raw
          $newContent = $projContent -replace '<PropertyGroup>', '<PropertyGroup>
            <DisableNuGetToolset>true</DisableNuGetToolset>
            <SkipNuGetTargets>true</SkipNuGetTargets>
            <Version>1.0.0</Version>
            <AppxPackageDir>$(MSBuildThisFileDirectory)AppPackages\</AppxPackageDir>
            <OutputPath>bin\$(Configuration)\$(Platform)</OutputPath>
            <IntermediateOutputPath>obj\$(Configuration)\$(Platform)</IntermediateOutputPath>'
          $newContent | Set-Content -Path Xbox-UWP-App.csproj

      # Étape 4 - Build avec MSBuild
      - name: Build AppX package
        shell: pwsh
        run: |
          # Commande MSBuild avec désactivation complète de NuGet
          msbuild Xbox-UWP-App.sln `
            /p:Configuration=Release `
            /p:Platform=x64 `
            /p:AppxBundle=Never `
            /p:UapAppxPackageBuildMode=StoreUpload `
            /p:WindowsTargetPlatformVersion=10.0.19041.0 `
            /p:AppxPackageDir="$($pwd.Path)\AppPackages\" `
            /p:GenerateAppxPackageOnBuild=true `
            /p:RestorePackages=false `
            /p:DisableNuGetToolset=true `
            /p:SkipNuGetTargets=true `
            /verbosity:minimal

          # Diagnostic: Lister tous les fichiers générés
          Write-Output "=== Fichiers générés ==="
          Get-ChildItem -Path . -Recurse | Where-Object { $_.Extension -in ('.appx','.appxsym') } | ForEach-Object {
              Write-Output "Trouvé: $($_.FullName)"
          }

      # Étape 5 - Vérification et publication des artefacts
      - name: Verify and upload artifacts
        shell: pwsh
        run: |
          # Vérifier si des fichiers .appx ont été générés
          $appxFiles = Get-ChildItem -Path . -Recurse -Filter *.appx
          if (-not $appxFiles) {
              Write-Output "##[error] Aucun fichier .appx trouvé"
              exit 1
          }
          
          # Copier les artefacts dans le dossier AppPackages si nécessaire
          $appxFiles | ForEach-Object {
              $dest = Join-Path -Path "./AppPackages" -ChildPath $_.Name
              Copy-Item -Path $_.FullName -Destination $dest -Force
          }

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: xbox-app-package
          path: ./AppPackages/
          if-no-files-found: error
          retention-days: 5
