name: Build Xbox UWP App Package

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 20

    steps:
      # Étape 1 - Checkout du code (EXISTANT)
      - name: Checkout repository
        uses: actions/checkout@v4

      # Étape 2 - Configuration MSBuild (EXISTANT)
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1
        with:
          vs-version: '17.0'

      # NEW - Étape CRITIQUE ajoutée (crée le dossier avant le build)
      - name: Ensure AppPackages directory exists
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path ./AppPackages -Force
          Write-Host "Dossier AppPackages confirmé à : $(Get-Location)/AppPackages"

      # Étape 3 - Correction du fichier projet (EXISTANT avec amélioration)
      - name: Fix project configuration
        shell: pwsh
        run: |
          # Ajoute les propriétés manquantes au fichier csproj
          $projContent = Get-Content -Path Xbox-UWP-App.csproj -Raw
          $newContent = $projContent -replace '<PropertyGroup>', '<PropertyGroup>
            <OutputPath>bin\$(Configuration)\$(Platform)</OutputPath>
            <IntermediateOutputPath>obj\$(Configuration)\$(Platform)</IntermediateOutputPath>
            <AppxPackageDir>$([System.IO.Path]::GetFullPath("$(MSBuildThisFileDirectory)AppPackages"))</AppxPackageDir>  <!-- NEW: Chemin absolu -->
            <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
            <NuGetTargetMoniker>UAP,Version=v10.0.19041</NuGetTargetMoniker>'
          $newContent | Set-Content -Path Xbox-UWP-App.csproj

      # Étape 4 - Build avec MSBuild (EXISTANT avec paramètre ajouté)
      - name: Build AppX package
        run: |
          msbuild Xbox-UWP-App.sln `
            /t:Restore `
            /p:Configuration=Release `
            /p:Platform=x64 `
            /p:AppxBundle=Never `
            /p:UapAppxPackageBuildMode=StoreUpload `
            /p:WindowsTargetPlatformVersion=10.0.19041.0 `
            /p:VisualStudioVersion=17.0 `
            /p:RestoreForce=true `
            /p:RestorePackagesConfig=true `
            /p:AppxPackageDir="${{ github.workspace }}\AppPackages\"  <!-- NEW: Chemin absolu -->

      # NEW - Vérification des fichiers générés
      - name: Validate output files
        shell: pwsh
        run: |
          $appxFiles = Get-ChildItem -Path ./AppPackages -Filter *.appx -Recurse
          if (!$appxFiles) {
              Write-Error "ERREUR : Aucun fichier .appx trouvé dans AppPackages"
              Get-ChildItem -Path ./AppPackages -Recurse | Format-Table FullName
              exit 1
          }
          Write-Host "Fichiers générés avec succès :"
          $appxFiles | ForEach-Object { Write-Host "- $($_.Name)" }

      # Étape 5 - Publication des artefacts (EXISTANT)
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: xbox-app-package
          path: |
            ./AppPackages/**/*.appx
            ./AppPackages/**/*.appxsym
          retention-days: 5

      # Optionnel: Déploiement sur Xbox Dev Kit (EXISTANT)
      - name: Deploy to Xbox (Optional)
        if: true  # Mettre à true pour activer
        shell: pwsh
        run: |
          $xboxIp = "192.168.1.18"  # Remplacer par l'IP de votre Xbox
          $xboxPin = "180708"       # Remplacer par votre PIN
          $appxFile = Get-ChildItem -Path ./AppPackages -Filter *.appx -Recurse | Select-Object -First 1
          
          if ($appxFile) {
              Write-Output "Deploying $($appxFile.FullName) to Xbox..."
              Start-Process "WinAppDeployCmd.exe" -ArgumentList @(
                  "install",
                  "-file", "`"$($appxFile.FullName)`"",
                  "-ip", $xboxIp,
                  "-pin", $xboxPin
              ) -Wait -NoNewWindow
          } else {
              Write-Error "No .appx file found in AppPackages folder"
              exit 1
          }
