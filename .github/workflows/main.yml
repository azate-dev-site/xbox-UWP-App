name: Xbox UWP Build Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Étape 1 - Récupération du code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Étape 2 - Installation des composants UWP
      - name: Install UWP Build Tools
        shell: powershell
        run: |
          # Téléchargement des Build Tools
          $vsInstaller = "$env:RUNNER_TEMP\vs_buildtools.exe"
          Invoke-WebRequest -Uri "https://aka.ms/vs/17/release/vs_buildtools.exe" -OutFile $vsInstaller
          
          # Installation silencieuse
          Start-Process -Wait -FilePath $vsInstaller -ArgumentList @(
            '--quiet',
            '--wait',
            '--norestart',
            '--add Microsoft.VisualStudio.Workload.Universal',
            '--add Microsoft.VisualStudio.Component.Windows10SDK.19041'
          )

          # Vérification de l'installation
          if (-not (Test-Path "${env:ProgramFiles(x86)}\Microsoft Visual Studio\2022\BuildTools\MSBuild\Current\Bin\MSBuild.exe")) {
              Write-Error "Échec de l'installation des outils UWP"
              exit 1
          }

      # Étape 3 - Configuration MSBuild
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      # Étape 4 - Création des fichiers projet
      - name: Generate Project Files
        shell: powershell
        run: |
          # Création du fichier .csproj si absent
          if (-not (Test-Path "Xbox-UWP-App.csproj")) {
              $projectGuid = [guid]::NewGuid().ToString().ToUpper()
              
              @"
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">x64</Platform>
    <ProjectGuid>{$projectGuid}</ProjectGuid>
    <OutputType>AppContainerExe</OutputType>
    <RootNamespace>Xbox_UWP_App</RootNamespace>
    <AssemblyName>Xbox-UWP-App</AssemblyName>
    <TargetPlatformIdentifier>UAP</TargetPlatformIdentifier>
    <TargetPlatformVersion>10.0.19041.0</TargetPlatformVersion>
    <MinimumVisualStudioVersion>14</MinimumVisualStudioVersion>
    <AppxPackage>true</AppxPackage>
    <AppxBundle>Always</AppxBundle>
    <AppxBundlePlatforms>x64</AppxBundlePlatforms>
    <UapAppxPackageBuildMode>StoreUpload</UapAppxPackageBuildMode>
  </PropertyGroup>
  <ItemGroup>
    <AppxManifest Include="Package.appxmanifest"/>
    <Content Include="Assets\**\*"/>
    <Compile Include="**\*.cs" Exclude="obj\**\*.cs"/>
    <Page Include="**\*.xaml" Exclude="obj\**\*.xaml"/>
  </ItemGroup>
  <Import Project="$(MSBuildExtensionsPath)\Microsoft\WindowsXaml\v$(VisualStudioVersion)\Microsoft.Windows.UI.Xaml.CSharp.targets"/>
</Project>
"@ | Out-File -FilePath "Xbox-UWP-App.csproj" -Encoding UTF8
          }

          # Création de la solution si absente
          if (-not (Test-Path "Xbox-UWP-App.sln")) {
              & "${env:ProgramFiles(x86)}\Microsoft Visual Studio\2022\BuildTools\Common7\IDE\dotnet\dotnet.exe" new sln -n "Xbox-UWP-App"
              & "${env:ProgramFiles(x86)}\Microsoft Visual Studio\2022\BuildTools\Common7\IDE\dotnet\dotnet.exe" sln add "Xbox-UWP-App.csproj"
          }

      # Étape 5 - Restauration des packages
      - name: Restore NuGet Packages
        run: nuget restore Xbox-UWP-App.sln

      # Étape 6 - Compilation
      - name: Build Solution
        shell: powershell
        run: |
          $msbuild = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\2022\BuildTools\MSBuild\Current\Bin\MSBuild.exe"
          & $msbuild Xbox-UWP-App.sln `
            /p:Configuration=Release `
            /p:Platform=x64 `
            /p:AppxBundle=Always `
            /p:AppxBundlePlatforms="x64" `
            /p:UapAppxPackageBuildMode=StoreUpload `
            /detailedsummary `
            /flp1:"v=diag;logfile=build_diagnostics.log" `
            /flp2:"errorsonly;logfile=build_errors.log"

          # Vérification du résultat
          if (-not (Test-Path "bin\x64\Release\AppPackages")) {
              Write-Error "La compilation a réussi mais le dossier AppPackages est manquant"
              exit 1
          }

      # Étape 7 - Publication des artefacts
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: AppPackage
          path: bin/x64/Release/AppPackages/
          if-no-files-found: error
          retention-days: 3

      # Étape 8 - Archivage des logs
      - name: Upload Build Logs
        uses: actions/upload-artifact@v4
        with:
          name: BuildLogs
          path: |
            build_diagnostics.log
            build_errors.log
          retention-days: 7
